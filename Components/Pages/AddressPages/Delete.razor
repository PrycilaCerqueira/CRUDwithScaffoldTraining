@page "/addresses/delete"
@inject CRUDwithScaffoldTraining.Data.ProductContext DB
@using CRUDwithScaffoldTraining.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Address</h4>
    <hr />
    @if (address is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Street</dt>
            <dd class="col-sm-10">@address.Street</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Street_Number</dt>
            <dd class="col-sm-10">@address.Street_Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Unit</dt>
            <dd class="col-sm-10">@address.Unit</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">City</dt>
            <dd class="col-sm-10">@address.City</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">State</dt>
            <dd class="col-sm-10">@address.State</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Zipcode</dt>
            <dd class="col-sm-10">@address.Zipcode</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Country</dt>
            <dd class="col-sm-10">@address.Country</dd>
        </dl>
        <EditForm method="post" Model="address" OnValidSubmit="DeleteAddress" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(address is null)">Delete</button> |
            <a href="/addresses">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Address? address;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        address = await DB.Address.FirstOrDefaultAsync(m => m.Id == Id);

        if (address is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteAddress()
    {
        DB.Address.Remove(address!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/addresses");
    }
}
